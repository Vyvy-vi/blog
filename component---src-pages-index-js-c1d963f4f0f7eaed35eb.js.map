{"version":3,"file":"component---src-pages-index-js-c1d963f4f0f7eaed35eb.js","mappings":"iKA8DA,IAnDY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,IACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,uCACa,8BAASb,EAAOa,MAD7B,MAC8Cb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KADjE,IAGE,qBAAGC,KAAI,yBAAyBZ,MAAAA,OAAA,EAAAA,EAAQa,UAAR,KAAhC,kCAEK,IALP,KAMK,IACH,qBAAGD,KAAI,wBAAwBZ,MAAAA,OAAA,EAAAA,EAAQc,SAAR,KAA/B,+BAPF,Q,uHCnBR,EAvBY,WAAO,IAAD,IACVnB,GAAOC,EAAAA,EAAAA,gBAAe,cAiBhB,UAAGD,EAAKG,KAAKC,oBAAb,OAAG,EAAwBF,OAC3B,UAAGF,EAAKG,KAAKC,oBAAb,OAAG,EAAwBC,OACvC,MAAO,ICwCT,EAvDkB,SAAC,GAAwB,IAAtBL,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,SACnBC,EAAQrB,EAAKsB,kBAAkBC,MAC/BC,EAAYxB,EAAKG,KAAKC,aAAaqB,OAAS,QAElD,OAAqB,IAAjBJ,EAAMK,OAEN,gBAAC,IAAD,CAAQN,SAAUA,EAAUK,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,0BACX,gBAAC,IAAD,MACA,4CAMJ,gBAAC,IAAD,CAAQL,SAAUA,EAAUK,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,EAAD,MACA,gBAAC,IAAD,MACA,sBAAIE,MAAO,CAAEC,UAAU,SACpBP,EAAMQ,KAAI,SAAAC,GACT,IAAML,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACE3B,UAAU,iBACV6B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYd,KAG/B,6BAAQK,EAAKC,YAAYS,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS,0B","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/nav.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author;\n  const social = data.site.siteMetadata?.social;\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/potato-icon.png\"\n        width={60}\n        height={50}\n        quality={100}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong>, {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You can follow them on Twitter\n          </a>{\" \"}\n          or{\" \"}\n          <a href={`https://github.com/${social?.github || ``}`}>\n            Connect with them on GitHub\n          </a>\n          .\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Bio;\n","import * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst Nav = () => {\n  const data = useStaticQuery(graphql`\n    query NavQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author;\n  const social = data.site.siteMetadata?.social;\n  return \"\";\n};\n\nexport default Nav;\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport Nav from \"../components/nav\";\n\nconst BlogIndex = ({ data, location }) => {\n  const posts = data.allMarkdownRemark.nodes;\n  const siteTitle = data.site.siteMetadata.title || \"Title\";\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"Vy's blog is empty :(\" />\n        <Bio />\n        <p>Coming Soon!!!</p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Vy's Blog\" />\n      <Nav />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug;\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","twitter","github","location","posts","allMarkdownRemark","nodes","siteTitle","title","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}